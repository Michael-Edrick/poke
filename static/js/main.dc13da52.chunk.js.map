{"version":3,"sources":["components/NavComponent.js","graphql/get-pokemon.js","components/PokeListComponent.js","containers/PokeListContainer.js","components/FunctionClick.js","components/PokeDetailComponent.js","containers/PokeDetailContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","styled","nav","Hamburger","div","Line","NavLink","p","isSidebarOpen","FontBox","Font","h3","Navbar","pathName","useLocation","pathname","useState","setSidebarState","console","log","onClick","to","className","GET_POKEMONS","gql","GET_POKEMON","PokeListComponent","pokemon","Card","state","H2","name","src","image","alt","h2","PokeListContainer","useQuery","variables","limit","offset","loading","error","data","message","Container","pokemons","results","map","Form","Component","props","handleClick","localStorage","setItem","nickname","count","handleNicknameChange","event","setState","target","value","handleSubmit","alert","preventDefault","parseInt","getItem","this","onSubmit","type","onChange","PokeDetailComponent","result","pokemonName","Back","Pic","sprites","front_default","move","types","abilities","ability","moves","img","Catch","button","PokeDetailContainer","location","App","client","ApolloClient","uri","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc13da52.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\n\r\nconst Navbar = () => {\r\n    const pathName = useLocation().pathname;\r\n\r\n\r\n    // State\r\n    const [isSidebarOpen, setSidebarState] = useState(false);\r\n\r\n    console.log(`Is sidebar open ${isSidebarOpen}`);\r\n\r\n    return (\r\n        <Navigation>\r\n            <Hamburger onClick={() => setSidebarState(!isSidebarOpen)}>\r\n                <Line></Line>\r\n                <Line></Line>\r\n                <Line></Line>\r\n            </Hamburger>\r\n            <NavLink isSidebarOpen={isSidebarOpen}>\r\n                <FontBox isSidebarOpen={isSidebarOpen}>\r\n                    <Link\r\n                        to=\"/poke-list-container\"\r\n                        className={pathName === \"/poke-list-container\" ? \"active\" : \"\"}\r\n                    >\r\n                        <Font isSidebarOpen={isSidebarOpen}>PokeList</Font>\r\n                    </Link>\r\n                    \r\n                </FontBox>\r\n            </NavLink>\r\n        </Navigation>\r\n    )\r\n}\r\n\r\n\r\nconst Navigation = styled.nav`\r\n    height: 10vh;\r\n\r\n    @media screen and (max-width: 768px){\r\n        position: relative;\r\n    }\r\n`;\r\n\r\nconst Hamburger = styled.div`\r\n    @media screen and (max-width: 768px){\r\n        position: absolute;\r\n        cursor: pointer;\r\n        right: 5%;\r\n        top: 50%;\r\n        transform: translate(-5%, -50%);\r\n        background: lightgreen;\r\n    }\r\n`\r\n\r\nconst Line = styled.div`\r\n    @media screen and (max-width: 768px){\r\n        width: 30px;\r\n        height: 3px;\r\n        background: white;\r\n        margin: 5px;\r\n    }\r\n`\r\n\r\nconst NavLink = styled.div`\r\n    display: flex;\r\n    list-style: none;\r\n    width: 50%;\r\n    height: 100%;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    margin-left: auto;\r\n\r\n    @media screen and (max-width: 768px){\r\n        position: right;\r\n        background: lightgrey;\r\n        height: 150vh;\r\n        width: ${p => p.isSidebarOpen ? '0%' : '35%'};\r\n        flex-direction: column;\r\n        transition: .2s ease-in all;\r\n    }\r\n\r\n    a {\r\n        color: white;\r\n        text-decoration: none;\r\n        font-size: 16px;\r\n        font-family: sans-serif;\r\n    }\r\n`\r\n\r\nconst FontBox = styled.div`\r\n    @media screen and (max-width: 768px){\r\n        background: lightgrey;\r\n        width: ${p => p.isSidebarOpen ? '0%' : '35%'};\r\n        height: 10vh;\r\n        border-top: 1px solid white;\r\n        border-bottom: 1px solid white;\r\n        box-sizing: border-box;\r\n        top: 100%;\r\n        position: absolute;\r\n        transition: .2 ease-in all;\r\n    }\r\n`\r\n\r\nconst Font = styled.h3`\r\n    @media screen and (max-width: 768px){\r\n        display: ${p => p.isSidebarOpen ? 'none' : 'flex'};\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default Navbar;\r\n\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_POKEMONS = gql`\r\n  query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      count\r\n      message\r\n      results {\r\n        url\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_POKEMON = gql`\r\n  query pokemon($name: String!) {\r\n    pokemon(name: $name) {\r\n      id\r\n      name\r\n      sprites {\r\n        front_default\r\n      }\r\n      abilities {\r\n        ability {\r\n          name\r\n        }\r\n      }\r\n      moves {\r\n        move {\r\n          name\r\n        }\r\n      }\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\n\r\nexport function PokeListComponent({pokemon}) {\r\n    return (\r\n        <Card>\r\n            <Link\r\n                to={{\r\n                    pathname: \"/poke-detail-container\",\r\n                    state: { pokemon: pokemon }\r\n                }}\r\n            >\r\n                <H2>{pokemon.name}</H2>\r\n                <img \r\n                    src={pokemon.image}\r\n                    alt={pokemon.name}\r\n                />\r\n                <h3>\r\n                        Owned: 0\r\n                </h3>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst H2 = styled.h2`\r\n    font-size: 20px;\r\n    color: white;\r\n    text-transform: capitalize;\r\n    margin: 0;\r\n`;\r\n\r\n\r\n\r\nconst Card = styled.div`\r\n    border-radius: 25px;\r\n    width: 150px;\r\n    height: 110px;\r\n    margin: 8px;\r\n    padding: 8px;\r\n    background-color: #c6eced;\r\n\r\n    @media screen and (max-width: 960px) {\r\n        width: 150px;\r\n        heigth:110px;\r\n    }\r\n\r\n    img {\r\n        padding: 0;\r\n        margin: 0;\r\n        float: right;\r\n    }\r\n\r\n    h3 {\r\n        font-size: 14px;\r\n        color: white;\r\n        text-transform: capitalize;\r\n        background: #a0cdce;\r\n        border-radius: 5px;\r\n        margin: 0;\r\n        width: -moz-fit-content;\r\n        width: fit-content;\r\n        padding-left: 3px;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport styled from '@emotion/styled';\r\nimport { GET_POKEMONS } from '../graphql/get-pokemon';\r\nimport { PokeListComponent } from '../components/PokeListComponent';\r\n\r\n\r\nexport function PokeListContainer () {\r\n  const { \r\n    loading,\r\n    error, \r\n    data } = useQuery(GET_POKEMONS, {\r\n    variables: {limit: 15, offset: 0},\r\n  });\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  return (\r\n      <Container>\r\n          {\r\n              data &&\r\n              data.pokemons.results &&\r\n              data.pokemons.results.map((pokemon) => (\r\n                  <PokeListComponent pokemon={pokemon}/>\r\n              ))\r\n          }\r\n      </Container>\r\n  );\r\n};\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 546px;\r\n  margin: auto;\r\n  display: flex;\r\n  flex-wrap: wrap;  \r\n  justify-content: left;\r\n  background: grey;\r\n\r\n  @media screen and (max-width: 630px) {\r\n    width: 365px;\r\n  }\r\n`;","import { valueToObjectRepresentation } from '@apollo/client/utilities';\r\nimport React, { Component } from 'react';\r\n\r\nexport class Catch extends Component {\r\n\r\n    render(){\r\n\r\n        function clickHandler(){\r\n            console.log('Button clicked')\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <button onClick={clickHandler}>Click{this.state.count}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            nickname: '',\r\n            count: parseInt(localStorage.getItem(\"owned\")) + 1\r\n        };\r\n    }\r\n\r\n    handleClick = () => {\r\n        \r\n        localStorage.setItem(this.state.nickname, this.props.name)\r\n        localStorage.setItem(\"owned\", this.state.count)\r\n    };\r\n\r\n    handleNicknameChange = (event) => {\r\n        this.setState({\r\n            nickname: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        alert(`${this.state.nickname}`)\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const nama = this.props.name;\r\n        const nick = this.state.nickname;\r\n\r\n        // function clickHandler(){\r\n        //     console.log('Button clicked')\r\n        //     localStorage.setItem(nick, nama);\r\n        // }\r\n\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <label>Nickname</label>\r\n                    <input \r\n                        type='text' \r\n                        value={this.state.nickname}\r\n                        onChange={this.handleNicknameChange}\r\n                    />\r\n                </div>\r\n                <p>{this.state.count}</p>\r\n                <button onClick={this.handleClick}>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport styled from '@emotion/styled';\r\nimport { GET_POKEMON } from '../graphql/get-pokemon';\r\nimport { GetName, Form } from '../components/FunctionClick';\r\n\r\n\r\nexport function PokeDetailComponent (result) {\r\n    const current = result.pokemon;\r\n    const pokemonName = current.pokemon.name;\r\n\r\n    const { \r\n    loading,\r\n    error, \r\n    data } = useQuery(GET_POKEMON, {\r\n    variables: {name: pokemonName},\r\n    });\r\n\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message} ${pokemonName}`;\r\n\r\n    return (\r\n        <Container>\r\n            <Back>\r\n                <Pic \r\n                    src={data.pokemon.sprites.front_default}\r\n                    alt={data.pokemon.name}\r\n                />\r\n                \r\n                <Form name={data.pokemon.name} />\r\n                \r\n\r\n                <Catch>\r\n                    Catch!\r\n                </Catch>\r\n\r\n                <div>{data.pokemon.move}</div>\r\n            </Back>\r\n                {data.pokemon.types ? (\r\n                    <div className=\"type\">\r\n                        <h5>Types:</h5>\r\n                        <div className=\"attributes\">\r\n                            {data.pokemon.types.map((type) => (\r\n                                <div className=\"round\">\r\n                                    {type.type.name}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n\r\n                {data.pokemon.abilities ? (\r\n                    <div className=\"type\">\r\n                        <h5>Abilities:</h5>\r\n                        <div className=\"attributes\">\r\n                            {data.pokemon.abilities.map((ability) => (\r\n                                <div className=\"round\">\r\n                                    {ability.ability.name}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n\r\n                {data.pokemon.types ? (\r\n                    <div className=\"type\">\r\n                        <h5>Moves:</h5>\r\n                        <div className=\"attributes\">\r\n                            {data.pokemon.moves.map((move) => (\r\n                                <div className=\"round\">\r\n                                    {move.move.name}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            <Back>\r\n\r\n            </Back>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;  \r\n    justify-content: center;\r\n`;\r\n\r\nconst Pic = styled.img``;\r\n\r\nconst Back = styled.div``;\r\n\r\nconst Catch = styled.button`\r\n    padding: 0.8rem;\r\n    margin-bottom: 3rem;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n    border: none;\r\n    outline: none;\r\n    font-weight: 800;\r\n    text-transform:uppercase;\r\n    &: hover {\r\n    background-color: #CC2020;\r\n    color: #F3F3F3;\r\n    }\r\n`;","import React, { Component } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { PokeDetailComponent } from '../components/PokeDetailComponent';\r\n\r\nclass PokeDetailContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = { data: props.location.state };\r\n      }\r\n\r\n    render() {\r\n        const pokemon = this.state.data;\r\n\r\n        return (\r\n            <Container>\r\n                <PokeDetailComponent pokemon={pokemon} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 4rem;\r\n`;\r\n\r\nexport default PokeDetailContainer;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport Navbar from './components/NavComponent';\nimport { PokeListContainer } from './containers/PokeListContainer';\nimport PokeDetailContainer from './containers/PokeDetailContainer';\n\n\n\n\n\nfunction App() {\n  const client = new ApolloClient({\n    uri: 'https://graphql-pokeapi.vercel.app/api/graphql'\n  });\n\n  if(localStorage.getItem(\"owned\")) {\n  }\n  else {\n    localStorage.setItem(\"owned\", 0);\n  }\n\n  return (\n    <ApolloProvider client={client}>\n    <main>\n      <Router>\n        <Navbar />\n          <Switch>\n            <Route exact path=\"/poke\">\n              <Redirect to=\"/poke-list-container\" />\n            </Route>\n            <Route exact path=\"/poke-list-container\" component={PokeListContainer} />\n            <Route exact path=\"/poke-detail-container\" component={PokeDetailContainer} />\n          </Switch>\n      </Router>\n    </main>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}